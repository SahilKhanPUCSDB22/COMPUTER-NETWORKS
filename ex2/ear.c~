#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <fcntl.h>
#define BUFLEN 1024

int main(int i,char* f[])
{
  int sockfd,fd, len, n,LISTENPORT;
  char buffer[BUFLEN];
  struct sockaddr_in receiverAddr, senderAddr;

  scanf("%d",&LISTENPORT);
  if((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0)
  {
    perror("socket system call failed");
    exit(EXIT_FAILURE);
  }

  memset(&receiverAddr, 0, sizeof(receiverAddr));
  memset(&senderAddr, 0, sizeof(senderAddr));

  receiverAddr.sin_family = AF_INET;
  receiverAddr.sin_addr.s_addr = INADDR_ANY;
  receiverAddr.sin_port = htons(LISTENPORT);

  if(bind(sockfd, (const struct sockaddr *)&receiverAddr, sizeof(receiverAddr)) < 0)
  {
    perror("bind syscall failed");
    exit(EXIT_FAILURE);
  }
  len = sizeof(senderAddr);
  
  //infinite ear
 
  int c=1;
  while(c!=0)
  {
  printf("Waiting: \n");
  n = recvfrom(sockfd, (char *)buffer, BUFLEN, MSG_WAITALL, (struct sockaddr *) &senderAddr, &len);
  buffer[n++] = '\0';
  printf("Recieved \n");
  if(strcmp(buffer,"/end")==0)
  {
	  exit(0);
  }

  fd = open(f[1],O_WRONLY | O_CREAT | O_APPEND, 0644);
  if(fd<0)
  {
	  perror("Error opening the file");
	  exit(1);
  }
  write(fd,buffer,n);
  }
  close(fd);
  return 0;
}


